<% Rails.logger.info("table_search.js.erb updating #{table_name}") %>

(() => {
  const updateHTMLById = (id, html) => {
    const el = document.getElementById(id);
    if (el) el.innerHTML = html;
  };

  // Save the checkbox states before updating current_filters
  const searchChecksDiv = document.getElementById("search_results_table_<%= table_name %>");
  const savedCheckboxStates = {};
  
  if (searchChecksDiv) {
    const checkboxes = searchChecksDiv.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach(checkbox => {
      const key = `${checkbox.name}[${checkbox.value}]`;
      savedCheckboxStates[key] = checkbox.checked;
    });
    console.log("üîÑ Saved checkbox states:", savedCheckboxStates, "number of checkboxes:", checkboxes.length);
  }

  updateHTMLById("<%= "possible_filters_div_" + table_name %>", `<%= j render(:partial => 'shared/possible_filters', :object => search_ctl) %>`);
  updateHTMLById("<%= "current_filters_" + table_name %>", `<%= j render(:partial => 'shared/current_filters', :object => search_ctl) %>`);

  <% if(params.has_key?("do_search")) %>
    updateHTMLById("<%= "search_results_" + table_name %>", `<%= j render(:partial => 'shared/search_results', :object => search_results) %>`);
    restoreSelectIndices("<%= table_name %>", savedCheckboxStates); 
    console.log("‚úÖ Search results updated for <%= table_name %>");
    const currentFiltersDiv = document.getElementById("current_filters_<%= table_name %>");
    if (currentFiltersDiv) {
      currentFiltersDiv.style.display = 'none';
    }
  <% else %>
    console.log("‚ÑπÔ∏è Search executed without 'do_search' parameter; only filters updated for <%= table_name %>");

  <% end %>

  
  <% if local_assigns[:open_edit] && local_assigns[:new_entry_id] %>
    // Hide current_filters div when creating new entry without prior search

    
    // Open edit window for the newly created entry
    const attribute_opener = '';
    const opener_id = 1;
    const table_name = '<%= table_name.tableize %>';
    const class_name = '<%= table_name %>';
    const new_id = '<%= local_assigns[:new_entry_id] %>';
    
    if (typeof open_edit_window === 'function') {
      open_edit_window(attribute_opener, opener_id, table_name, class_name, new_id);
      console.log('‚úÖ Opened edit window for new <%= table_name %> (ID: <%= local_assigns[:new_entry_id] %>)');
    } else {
      console.log('‚ö†Ô∏è open_edit_window function not available');
    }
    
    if (window.showNotification) {
      window.showNotification('New <%= table_name %> created successfully', 'success');
    } else {
      alert('New <%= table_name %> created successfully');
    }
  <% end %>
  
  resizeX();

  action_select_no_js();
  resizeFilters();
  
  // Refresh external filter selects to ensure they're properly populated
  if (typeof refreshExternalFilterSelects === 'function') {
    // refreshExternalFilterSelects("<%= table_name %>");
  }
  
  unwait();
})();
