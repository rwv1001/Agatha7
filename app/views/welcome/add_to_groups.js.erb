<% if(group_ids.length == 0) %>
    if (window.showNotification) {
      window.showNotification('<%="Add Selected Failed: You did not select any groups."%>', 'error');
    } else {
      alert('<%="Add Selected Failed: You did not select any groups."%>');
    }
<% elsif permissioned.length == 0 %>
    if (window.showNotification) {
      window.showNotification('<%="You do not have permission to add members to any of the selected groups."%>', 'error');
    } else {
      alert('<%="You do not have permission to add members to any of the selected groups."%>');
    }
<% else %>
    <% success_str = ""; %>
    <% if unpresent.length ==1 %>
        <% success_str << "#{class_name} was added to 1 group. " %>   
    <% elsif unpresent.length >1 %>
        <% success_str << "#{class_name} was added to #{unpresent.length} groups. " %>
    <% end %>
    <% if present.length == 1 %>
        <% success_str << "#{class_name} was not added to 1 group because it was already in it. "%>
    <% elsif present.length >1 %>
        <% success_str << "#{class_name} was not added to #{present.length} groups because it was already in them. " %>    
    <% end %>
    <% if wrong_types.length == 1 %>
        <% success_str << "#{class_name} was not added to 1 group because it was of the wrong type. "%>
    <% elsif wrong_types.length > 1 %>
        <% success_str << "#{class_name} was not added to #{wrong_types.length} groups because they were of the wrong type. " %>
    <% end %>
    <% if unpermissioned.length == 1 %>
        <% success_str << "#{class_name} was not added to 1 group because you did not have permission to update this group. "%>
    <% elsif unpermissioned.length >1 %>
        <% success_str << "#{class_name} was not added to #{unpermissioned.length} groups because you did not have permission to update these groups. " %>
    <% end %>
                 
    <% table_name = class_name %>

    <% id_array = []; %>
    <% id_array << class_id.to_i; %>
    <% eval("#{table_name}.set_controller(search_ctl)"); %>
    <% updated_objects = search_ctl.GetUpdateObjects(table_name, ["id"], id_array); %>

    <% updated_objects.each do |row| %>
        var el = document.getElementById('<%="#{row.id}_#{table_name}"%>');
        if (el) {
            el.outerHTML = "<%= j render(:partial => 'shared/search_results_row_button', :object => row) %>";
        }
    <% end %>
    recolour('<%="#{table_name}"%>'); 
    <% table_name = "Group" %>
    <% eval("#{table_name}.set_controller(search_ctl_group)"); %>
    <% updated_objects = search_ctl_group.GetUpdateObjects(table_name, ["id"], group_ids); %>
    <% updated_objects.each do |row| %>
        var el = document.getElementById('<%="#{row.id}_#{table_name}"%>');
        if (el) {
            el.outerHTML = "<%= j render(:partial => 'shared/search_results_row_button', :object => row) %>";
            setcheck('#<%="#{table_name}_check_#{row.id.to_s}"%>',true)
        }
    <% end %>
    recolour('Group'); 
    
    console.log("üöÄ ADD_TO_GROUPS JS EXECUTING - <%= class_name %> ID: <%= class_id %>, Group IDs: <%= group_ids %>"); 
    
    // Update UI first, then highlight the updated content
    action_select_no_js(); 
    
    // Force a content refresh and then highlight
    setTimeout(function() {
      console.log("üîÑ Triggering content refresh for group updates");
      
      // Store checkbox states before refresh
      const classTable = document.getElementById('search_results_<%= class_name %>');
      const groupTable = document.getElementById('search_results_Group');
      const checkboxStates = {};
      
      [classTable, groupTable].forEach(table => {
        if (table) {
          const checkboxes = table.querySelectorAll('input[type="checkbox"]');
          checkboxes.forEach(checkbox => {
            checkboxStates[checkbox.id] = checkbox.checked;
          });
        }
      });
      
      // Try to trigger a search refresh to update the displayed content
      if (typeof Search === 'function') {
        console.log("üìä Found Search function, triggering refresh for <%= class_name %> and Group tables");
        Search('<%= class_name %>');
        Search('Group');
      } else {
        console.log("‚ö†Ô∏è No refresh function found, proceeding with highlighting");
      }
      
      // Restore checkbox states after a short delay
      setTimeout(function() {
        Object.keys(checkboxStates).forEach(checkboxId => {
          const checkbox = document.getElementById(checkboxId);
          if (checkbox) {
            checkbox.checked = checkboxStates[checkboxId];
          }
        });
      }, 200);
      
      // Add highlighting after content refresh
      setTimeout(function() {
        console.log("üéØ Targeting content cells for highlighting after content refresh");
        
        // Target the person's "Groups_in_Person" cell (or similar for other class types)
        console.log("Looking for <%= class_name.downcase %> row: <%= class_id %>_<%= class_name %>");
        const <%= class_name.downcase %>RowElement_<%= class_id %> = document.getElementById('<%= class_id %>_<%= class_name %>');
        console.log("Found <%= class_name.downcase %> row:", <%= class_name.downcase %>RowElement_<%= class_id %>);
        if (<%= class_name.downcase %>RowElement_<%= class_id %>) {
          const groupsCell_<%= class_id %> = <%= class_name.downcase %>RowElement_<%= class_id %>.querySelector('.Groups_in_<%= class_name %>');
          console.log("Found Groups_in_<%= class_name %> cell:", groupsCell_<%= class_id %>);
          if (groupsCell_<%= class_id %>) {
            groupsCell_<%= class_id %>.classList.add('cell-updated');
            setTimeout(() => {
              groupsCell_<%= class_id %>.classList.remove('cell-updated');
            }, 1500);
            console.log("‚ú® Highlighted <%= class_name.downcase %>'s groups cell with updated content");
          } else {
            console.log("‚ùå Could not find Groups_in_<%= class_name %> cell");
          }
        } else {
          console.log("‚ùå Could not find <%= class_name.downcase %> row: <%= class_id %>_<%= class_name %>");
        }
        
        // Target each group's "Number_of_group_members_Group" cell
<%   group_ids.each do |group_id| %>
        console.log("Looking for group row: <%= group_id %>_Group");
        const groupRowElement_<%= group_id %> = document.getElementById('<%= group_id %>_Group');
        console.log("Found group <%= group_id %> row:", groupRowElement_<%= group_id %>);
        if (groupRowElement_<%= group_id %>) {
          const membersCell_<%= group_id %> = groupRowElement_<%= group_id %>.querySelector('.Number_of_group_members_Group');
          console.log("Found Number_of_group_members_Group cell for group <%= group_id %>:", membersCell_<%= group_id %>);
          if (membersCell_<%= group_id %>) {
            membersCell_<%= group_id %>.classList.add('cell-updated');
            setTimeout(() => {
              membersCell_<%= group_id %>.classList.remove('cell-updated');
            }, 1500);
            console.log("‚ú® Highlighted group <%= group_id %> members cell with updated content");
          } else {
            console.log("‚ùå Could not find Number_of_group_members_Group cell for group <%= group_id %>");
          }
        } else {
          console.log("‚ùå Could not find group row: <%= group_id %>_Group");
        }
<%   end %>
      }, 1000); // Wait longer for search refresh to complete
    }, 100); // Small delay before triggering refresh
    
    if (window.showNotification) {
      window.showNotification('<%="#{success_str}"%>', 'success');
    } else {
      alert('<%="#{success_str}"%>');
    }
<% end %>
unwait();
