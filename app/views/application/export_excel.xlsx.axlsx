wb = xlsx_package.workbook

# Define styles for formatting
header_style = wb.styles.add_style(
  bg_color: "4F81BD",  # Blue header background
  fg_color: "FFFFFF",  # White text
  b: true,             # Bold
  alignment: { horizontal: :center, vertical: :top, wrap_text: true },
  border: {
    style: :thick,
    color: "000000",   # Black borders
    edges: [:top, :bottom]
  },
  border_top: { style: :thick, color: "000000" },
  border_bottom: { style: :thick, color: "000000" },
  border_left: { style: :thin, color: "000000" },
  border_right: { style: :thin, color: "000000" }
)

# Light green for alternating rows with thin grey borders
light_green_style = wb.styles.add_style(
  bg_color: "E8F5E8",  # Very light green
  border: {
    style: :thin,
    color: "808080",   # Grey borders
    edges: [:top, :bottom, :left, :right]
  },
  alignment: { vertical: :top, wrap_text: true }  # Top align with text wrapping
)

# White style for alternating rows with thin grey borders
white_style = wb.styles.add_style(
  bg_color: "FFFFFF",  # White
  border: {
    style: :thin,
    color: "808080",   # Grey borders
    edges: [:top, :bottom, :left, :right]
  },
  alignment: { vertical: :top, wrap_text: true }  # Top align with text wrapping
)

wb.add_worksheet(name: "#{table_name} Export") do |sheet|
  
  # Add headers (column names) if results exist
  if results.ntuples > 0
    headers = results.fields
    
    # Add header row with styling
    sheet.add_row headers, style: header_style
    
    # Add data rows with alternating colors
    results.each_with_index do |row, index|
      # Process row data to convert HTML tags to line breaks
      row_data = headers.map do |field|
        value = row[field]
        if value.is_a?(String)
          # Replace various HTML line break patterns with actual newlines
          value.gsub(/<br\s*\/?>/i, "\n")
               .gsub(/<\/p>\s*<p>/i, "\n\n")  # Convert paragraph breaks
               .gsub(/<p>/i, "")              # Remove opening paragraph tags
               .gsub(/<\/p>/i, "")            # Remove closing paragraph tags
               .strip                         # Remove leading/trailing whitespace
        else
          value
        end
      end
      # Alternate between white and light green (starting with white for row 1)
      row_style = (index % 2 == 0) ? white_style : light_green_style
      sheet.add_row row_data, style: row_style
    end
    
    # Freeze the top row (header row)
    sheet.sheet_view.pane do |pane|
      pane.top_left_cell = "A2"
      pane.state = :frozen
      pane.y_split = 1
    end
    
  else
    sheet.add_row ["No data found"]
  end
  
end