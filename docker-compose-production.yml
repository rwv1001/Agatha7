services:
  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - "6379:6379"
  db:
    image: postgres:15
    container_name: agatha-postgres-production
    environment:
      - POSTGRES_DB=${ENV_POSTGRES_DB}
      - POSTGRES_USER=${ENV_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ENV_POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /home/robert/agathabackup/:/backups
    command: ["postgres", "-c", "max_connections=500"]
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${ENV_POSTGRES_HOST} -U ${ENV_POSTGRES_USER} -d ${ENV_POSTGRES_DB}"]  # Checks if Postgres is ready
      interval: 5s                 # Check every 5 seconds
      timeout: 5s                  # Timeout after 5 seconds
      retries: 10                  # Retry up to 10 times
  app:
    build:
      context: .
      dockerfile: production.Dockerfile
    depends_on:
      - db
      - redis
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=${ENV_POSTGRES_HOST}
      - POSTGRES_DB=${ENV_POSTGRES_DB}
      - POSTGRES_USER=${ENV_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ENV_POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${ENV_RAILS_MASTER_KEY}
      - REDIS_URL=redis://redis:6379/1
      - MICROSOFT_GRAPH_CLIENT_ID=${MICROSOFT_GRAPH_CLIENT_ID}
      - MICROSOFT_GRAPH_CLIENT_SECRET=${MICROSOFT_GRAPH_CLIENT_SECRET}
      - MICROSOFT_GRAPH_TENANT_ID=${MICROSOFT_GRAPH_TENANT_ID}
      - AGATHA_USE_MICROSOFT_GRAPH=${AGATHA_USE_MICROSOFT_GRAPH}
      - AGATHA_ENABLE_DEBUG_LOGGING=${AGATHA_ENABLE_DEBUG_LOGGING:-false}
    ports:
      - "3000:3000"
    volumes:
      - app-storage:/rails/storage
      
    # Remove the command override
    # command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"

volumes:
  postgres_data: {}
  app-storage: {}
